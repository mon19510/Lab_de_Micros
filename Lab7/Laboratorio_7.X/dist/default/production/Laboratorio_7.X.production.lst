

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Apr 18 21:26:25 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213                           
   214                           	psect	idataBANK0
   215  01E6                     __pidataBANK0:
   216                           
   217                           ;initializer for _tablita
   218  01E6  343F               	retlw	63
   219  01E7  3406               	retlw	6
   220  01E8  345B               	retlw	91
   221  01E9  344F               	retlw	79
   222  01EA  3466               	retlw	102
   223  01EB  346D               	retlw	109
   224  01EC  347D               	retlw	125
   225  01ED  3407               	retlw	7
   226  01EE  347F               	retlw	127
   227  01EF  346F               	retlw	111
   228                           
   229                           	psect	nvCOMMON
   230  0077                     __pnvCOMMON:
   231  0077                     _counter:
   232  0077                     	ds	1
   233  0078                     _residuo:
   234  0078                     	ds	1
   235                           
   236                           	psect	nvBANK0
   237  0032                     __pnvBANK0:
   238  0032                     _unidad:
   239  0032                     	ds	1
   240  0033                     _decena:
   241  0033                     	ds	1
   242  0034                     _centena:
   243  0034                     	ds	1
   244  0006                     _PORTB	set	6
   245  0005                     _PORTA	set	5
   246  0007                     _PORTC	set	7
   247  0006                     _PORTBbits	set	6
   248  0001                     _TMR0	set	1
   249  000B                     _INTCONbits	set	11
   250  0008                     _PORTD	set	8
   251  0005                     _PORTAbits	set	5
   252  0058                     _RBIF	set	88
   253  005A                     _T0IF	set	90
   254  0096                     _IOCBbits	set	150
   255  0095                     _WPUB	set	149
   256  0081                     _OPTION_REGbits	set	129
   257  008F                     _OSCCONbits	set	143
   258  0088                     _TRISD	set	136
   259  0087                     _TRISC	set	135
   260  0086                     _TRISBbits	set	134
   261  0085                     _TRISAbits	set	133
   262  0189                     _ANSELH	set	393
   263  0188                     _ANSEL	set	392
   264                           
   265                           	psect	cinit
   266  0011                     start_initialization:	
   267                           ; #config settings
   268                           
   269  0011                     __initialization:
   270                           
   271                           ; Initialize objects allocated to BANK0
   272  0011  1383               	bcf	3,7	;select IRP bank0
   273  0012  302A               	movlw	low (__pdataBANK0+10)
   274  0013  00FD               	movwf	btemp+-1
   275  0014  3001               	movlw	high __pidataBANK0
   276  0015  00FE               	movwf	btemp
   277  0016  30E6               	movlw	low __pidataBANK0
   278  0017  00FF               	movwf	btemp+1
   279  0018  3020               	movlw	low __pdataBANK0
   280  0019  0084               	movwf	4
   281  001A  120A  118A  21C9  120A  118A  	fcall	init_ram0
   282                           
   283                           ; Clear objects allocated to COMMON
   284  001F  01F9               	clrf	__pbssCOMMON& (0+127)
   285  0020  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   286  0021                     end_of_initialization:	
   287                           ;End of C runtime variable initialization code
   288                           
   289  0021                     __end_of__initialization:
   290  0021  0183               	clrf	3
   291  0022  120A  118A  29D8   	ljmp	_main	;jump to C main() function
   292                           
   293                           	psect	bssCOMMON
   294  0079                     __pbssCOMMON:
   295  0079                     _multiplex:
   296  0079                     	ds	2
   297                           
   298                           	psect	dataBANK0
   299  0020                     __pdataBANK0:
   300  0020                     _tablita:
   301  0020                     	ds	10
   302                           
   303                           	psect	inittext
   304  01C5                     init_fetch0:	
   305                           ;	Called with low address in FSR and high address in W
   306                           
   307  01C5  087E               	movf	btemp,w
   308  01C6  008A               	movwf	10
   309  01C7  087F               	movf	btemp+1,w
   310  01C8  0082               	movwf	2
   311  01C9                     init_ram0:	
   312                           ;Called with:
   313                           ;	high address of idata address in btemp 
   314                           ;	low address of idata address in btemp+1 
   315                           ;	low address of data in FSR
   316                           ;	high address + 1 of data in btemp-1
   317                           
   318  01C9  120A  118A  21C5  120A  118A  	fcall	init_fetch0
   319  01CE  0080               	movwf	0
   320  01CF  0A84               	incf	4,f
   321  01D0  0804               	movf	4,w
   322  01D1  067D               	xorwf	btemp+-1,w
   323  01D2  1903               	btfsc	3,2
   324  01D3  3400               	retlw	0
   325  01D4  0AFF               	incf	btemp+1,f
   326  01D5  1903               	btfsc	3,2
   327  01D6  0AFE               	incf	btemp,f
   328  01D7  29C9               	goto	init_ram0
   329                           
   330                           	psect	cstackCOMMON
   331  0070                     __pcstackCOMMON:
   332  0070                     ?_setup:
   333  0070                     ?_division:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_isr:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ??_isr:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_main:	
   343                           ; 1 bytes @ 0x0
   344                           
   345                           
   346                           ; 1 bytes @ 0x0
   347  0070                     	ds	3
   348  0073                     ??_setup:
   349  0073                     ?___awdiv:	
   350                           ; 1 bytes @ 0x3
   351                           
   352  0073                     ?___awmod:	
   353                           ; 2 bytes @ 0x3
   354                           
   355  0073                     ___awdiv@divisor:	
   356                           ; 2 bytes @ 0x3
   357                           
   358  0073                     ___awmod@divisor:	
   359                           ; 2 bytes @ 0x3
   360                           
   361                           
   362                           ; 2 bytes @ 0x3
   363  0073                     	ds	2
   364  0075                     ___awdiv@dividend:
   365  0075                     ___awmod@dividend:	
   366                           ; 2 bytes @ 0x5
   367                           
   368                           
   369                           ; 2 bytes @ 0x5
   370  0075                     	ds	2
   371  0077                     ??_main:
   372                           
   373                           	psect	cstackBANK0
   374  002A                     __pcstackBANK0:	
   375                           ; 1 bytes @ 0x7
   376                           
   377  002A                     ??___awdiv:
   378  002A                     ??___awmod:	
   379                           ; 1 bytes @ 0x0
   380                           
   381                           
   382                           ; 1 bytes @ 0x0
   383  002A                     	ds	1
   384  002B                     ___awdiv@counter:
   385  002B                     ___awmod@counter:	
   386                           ; 1 bytes @ 0x1
   387                           
   388                           
   389                           ; 1 bytes @ 0x1
   390  002B                     	ds	1
   391  002C                     ___awdiv@sign:
   392  002C                     ___awmod@sign:	
   393                           ; 1 bytes @ 0x2
   394                           
   395                           
   396                           ; 1 bytes @ 0x2
   397  002C                     	ds	1
   398  002D                     ___awdiv@quotient:
   399                           
   400                           ; 2 bytes @ 0x3
   401  002D                     	ds	2
   402  002F                     ??_division:
   403                           
   404                           ; 1 bytes @ 0x5
   405  002F                     	ds	3
   406                           
   407                           	psect	maintext
   408  01D8                     __pmaintext:	
   409 ;;
   410 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   411 ;;
   412 ;; *************** function _main *****************
   413 ;; Defined at:
   414 ;;		line 84 in file "Lab7.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;		None
   417 ;; Auto vars:     Size  Location     Type
   418 ;;		None
   419 ;; Return value:  Size  Location     Type
   420 ;;                  1    wreg      void 
   421 ;; Registers used:
   422 ;;		wreg, status,2, status,0, pclath, cstack
   423 ;; Tracked objects:
   424 ;;		On entry : B00/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   428 ;;      Params:         0       0       0       0       0
   429 ;;      Locals:         0       0       0       0       0
   430 ;;      Temps:          0       0       0       0       0
   431 ;;      Totals:         0       0       0       0       0
   432 ;;Total ram usage:        0 bytes
   433 ;; Hardware stack levels required when called:    3
   434 ;; This function calls:
   435 ;;		_division
   436 ;;		_setup
   437 ;; This function is called by:
   438 ;;		Startup code after reset
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           
   443                           ;psect for function _main
   444  01D8                     _main:
   445  01D8                     l1083:	
   446                           ;incstack = 0
   447                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   448                           
   449                           
   450                           ;Lab7.c: 86:     setup();
   451  01D8  120A  118A  219C  120A  118A  	fcall	_setup
   452  01DD                     l74:	
   453                           ;Lab7.c: 88:     while(1)
   454                           
   455                           
   456                           ;Lab7.c: 89:     {;Lab7.c: 90:         division();
   457  01DD  120A  118A  208E  120A  118A  	fcall	_division
   458  01E2  29DD               	goto	l74
   459  01E3  120A  118A  280E   	ljmp	start
   460  01E6                     __end_of_main:
   461                           
   462                           	psect	text1
   463  019C                     __ptext1:	
   464 ;; *************** function _setup *****************
   465 ;; Defined at:
   466 ;;		line 97 in file "Lab7.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;		None
   469 ;; Auto vars:     Size  Location     Type
   470 ;;		None
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg, status,2
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   480 ;;      Params:         0       0       0       0       0
   481 ;;      Locals:         0       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0
   483 ;;      Totals:         0       0       0       0       0
   484 ;;Total ram usage:        0 bytes
   485 ;; Hardware stack levels used:    1
   486 ;; Hardware stack levels required when called:    1
   487 ;; This function calls:
   488 ;;		Nothing
   489 ;; This function is called by:
   490 ;;		_main
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           
   495                           ;psect for function _setup
   496  019C                     _setup:
   497  019C                     l757:	
   498                           ;incstack = 0
   499                           ; Regs used in _setup: [wreg+status,2]
   500                           
   501                           
   502                           ;Lab7.c: 100:     ANSEL = 0x00;
   503  019C  1683               	bsf	3,5	;RP0=1, select bank3
   504  019D  1703               	bsf	3,6	;RP1=1, select bank3
   505  019E  0188               	clrf	8	;volatile
   506                           
   507                           ;Lab7.c: 101:     ANSELH = 0x00;
   508  019F  0189               	clrf	9	;volatile
   509  01A0                     l759:
   510                           
   511                           ;Lab7.c: 104:     TRISAbits.TRISA0 = 0;
   512  01A0  1683               	bsf	3,5	;RP0=1, select bank1
   513  01A1  1303               	bcf	3,6	;RP1=0, select bank1
   514  01A2  1005               	bcf	5,0	;volatile
   515  01A3                     l761:
   516                           
   517                           ;Lab7.c: 105:     TRISAbits.TRISA1 = 0;
   518  01A3  1085               	bcf	5,1	;volatile
   519  01A4                     l763:
   520                           
   521                           ;Lab7.c: 106:     TRISAbits.TRISA2 = 0;
   522  01A4  1105               	bcf	5,2	;volatile
   523  01A5                     l765:
   524                           
   525                           ;Lab7.c: 107:     TRISBbits.TRISB0 = 1;
   526  01A5  1406               	bsf	6,0	;volatile
   527  01A6                     l767:
   528                           
   529                           ;Lab7.c: 108:     TRISBbits.TRISB1 = 1;
   530  01A6  1486               	bsf	6,1	;volatile
   531                           
   532                           ;Lab7.c: 109:     TRISC = 0x00;
   533  01A7  0187               	clrf	7	;volatile
   534                           
   535                           ;Lab7.c: 110:     TRISD = 0x00;
   536  01A8  0188               	clrf	8	;volatile
   537                           
   538                           ;Lab7.c: 113:     PORTA = 0x00;
   539  01A9  1283               	bcf	3,5	;RP0=0, select bank0
   540  01AA  1303               	bcf	3,6	;RP1=0, select bank0
   541  01AB  0185               	clrf	5	;volatile
   542                           
   543                           ;Lab7.c: 114:     PORTB = 0x00;
   544  01AC  0186               	clrf	6	;volatile
   545                           
   546                           ;Lab7.c: 115:     PORTC = 0x00;
   547  01AD  0187               	clrf	7	;volatile
   548                           
   549                           ;Lab7.c: 116:     PORTD = 0x00;
   550  01AE  0188               	clrf	8	;volatile
   551  01AF                     l769:
   552                           
   553                           ;Lab7.c: 119:     OSCCONbits.IRCF2 = 0;
   554  01AF  1683               	bsf	3,5	;RP0=1, select bank1
   555  01B0  1303               	bcf	3,6	;RP1=0, select bank1
   556  01B1  130F               	bcf	15,6	;volatile
   557  01B2                     l771:
   558                           
   559                           ;Lab7.c: 120:     OSCCONbits.IRCF1 = 1;
   560  01B2  168F               	bsf	15,5	;volatile
   561  01B3                     l773:
   562                           
   563                           ;Lab7.c: 121:     OSCCONbits.IRCF0 = 0;
   564  01B3  120F               	bcf	15,4	;volatile
   565  01B4                     l775:
   566                           
   567                           ;Lab7.c: 122:     OSCCONbits.SCS = 1;
   568  01B4  140F               	bsf	15,0	;volatile
   569  01B5                     l777:
   570                           
   571                           ;Lab7.c: 125:     OPTION_REGbits.T0CS = 0;
   572  01B5  1281               	bcf	1,5	;volatile
   573  01B6                     l779:
   574                           
   575                           ;Lab7.c: 126:     OPTION_REGbits.PSA = 0;
   576  01B6  1181               	bcf	1,3	;volatile
   577  01B7                     l781:
   578                           
   579                           ;Lab7.c: 127:     OPTION_REGbits.PS2 = 1;
   580  01B7  1501               	bsf	1,2	;volatile
   581  01B8                     l783:
   582                           
   583                           ;Lab7.c: 128:     OPTION_REGbits.PS1 = 1;
   584  01B8  1481               	bsf	1,1	;volatile
   585  01B9                     l785:
   586                           
   587                           ;Lab7.c: 129:     OPTION_REGbits.PS0 = 1;
   588  01B9  1401               	bsf	1,0	;volatile
   589  01BA                     l787:
   590                           
   591                           ;Lab7.c: 132:     OPTION_REGbits.nRBPU = 0;
   592  01BA  1381               	bcf	1,7	;volatile
   593  01BB                     l789:
   594                           
   595                           ;Lab7.c: 133:     WPUB = 0b00000011;
   596  01BB  3003               	movlw	3
   597  01BC  0095               	movwf	21	;volatile
   598  01BD                     l791:
   599                           
   600                           ;Lab7.c: 134:     IOCBbits.IOCB0 = 1;
   601  01BD  1416               	bsf	22,0	;volatile
   602  01BE                     l793:
   603                           
   604                           ;Lab7.c: 135:     IOCBbits.IOCB1 = 1;
   605  01BE  1496               	bsf	22,1	;volatile
   606  01BF                     l795:
   607                           
   608                           ;Lab7.c: 138:     INTCONbits.GIE = 1;
   609  01BF  178B               	bsf	11,7	;volatile
   610  01C0                     l797:
   611                           
   612                           ;Lab7.c: 139:     INTCONbits.RBIF = 1;
   613  01C0  140B               	bsf	11,0	;volatile
   614  01C1                     l799:
   615                           
   616                           ;Lab7.c: 140:     INTCONbits.RBIE = 1;
   617  01C1  158B               	bsf	11,3	;volatile
   618  01C2                     l801:
   619                           
   620                           ;Lab7.c: 141:     INTCONbits.T0IE = 1;
   621  01C2  168B               	bsf	11,5	;volatile
   622  01C3                     l803:
   623                           
   624                           ;Lab7.c: 142:     INTCONbits.T0IF = 0;
   625  01C3  110B               	bcf	11,2	;volatile
   626  01C4                     l80:
   627  01C4  0008               	return
   628  01C5                     __end_of_setup:
   629                           
   630                           	psect	text2
   631  008E                     __ptext2:	
   632 ;; *************** function _division *****************
   633 ;; Defined at:
   634 ;;		line 146 in file "Lab7.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;		None
   637 ;; Auto vars:     Size  Location     Type
   638 ;;		None
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      unsigned char 
   641 ;; Registers used:
   642 ;;		wreg, status,2, status,0, pclath, cstack
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   648 ;;      Params:         0       0       0       0       0
   649 ;;      Locals:         0       0       0       0       0
   650 ;;      Temps:          0       3       0       0       0
   651 ;;      Totals:         0       3       0       0       0
   652 ;;Total ram usage:        3 bytes
   653 ;; Hardware stack levels used:    1
   654 ;; Hardware stack levels required when called:    2
   655 ;; This function calls:
   656 ;;		___awdiv
   657 ;;		___awmod
   658 ;; This function is called by:
   659 ;;		_main
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           
   664                           ;psect for function _division
   665  008E                     _division:
   666  008E                     l1073:	
   667                           ;incstack = 0
   668                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
   669                           
   670                           
   671                           ;Lab7.c: 148:     counter = PORTC;
   672  008E  1283               	bcf	3,5	;RP0=0, select bank0
   673  008F  1303               	bcf	3,6	;RP1=0, select bank0
   674  0090  0807               	movf	7,w	;volatile
   675  0091  00AF               	movwf	??_division
   676  0092  082F               	movf	??_division,w
   677  0093  00F7               	movwf	_counter
   678  0094                     l1075:
   679                           
   680                           ;Lab7.c: 149:     centena = counter/100;
   681  0094  3064               	movlw	100
   682  0095  00F3               	movwf	___awdiv@divisor
   683  0096  3000               	movlw	0
   684  0097  00F4               	movwf	___awdiv@divisor+1
   685  0098  0877               	movf	_counter,w
   686  0099  00AF               	movwf	??_division
   687  009A  01B0               	clrf	??_division+1
   688  009B  082F               	movf	??_division,w
   689  009C  00F5               	movwf	___awdiv@dividend
   690  009D  0830               	movf	??_division+1,w
   691  009E  00F6               	movwf	___awdiv@dividend+1
   692  009F  120A  118A  2025  120A  118A  	fcall	___awdiv
   693  00A4  0873               	movf	?___awdiv,w
   694  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   695  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   696  00A7  00B1               	movwf	??_division+2
   697  00A8  0831               	movf	??_division+2,w
   698  00A9  00B4               	movwf	_centena
   699  00AA                     l1077:
   700                           
   701                           ;Lab7.c: 150:     residuo = counter%100;
   702  00AA  3064               	movlw	100
   703  00AB  00F3               	movwf	___awmod@divisor
   704  00AC  3000               	movlw	0
   705  00AD  00F4               	movwf	___awmod@divisor+1
   706  00AE  0877               	movf	_counter,w
   707  00AF  00AF               	movwf	??_division
   708  00B0  01B0               	clrf	??_division+1
   709  00B1  082F               	movf	??_division,w
   710  00B2  00F5               	movwf	___awmod@dividend
   711  00B3  0830               	movf	??_division+1,w
   712  00B4  00F6               	movwf	___awmod@dividend+1
   713  00B5  120A  118A  20ED  120A  118A  	fcall	___awmod
   714  00BA  0873               	movf	?___awmod,w
   715  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   716  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   717  00BD  00B1               	movwf	??_division+2
   718  00BE  0831               	movf	??_division+2,w
   719  00BF  00F8               	movwf	_residuo
   720  00C0                     l1079:
   721                           
   722                           ;Lab7.c: 151:     decena = residuo/10;
   723  00C0  300A               	movlw	10
   724  00C1  00F3               	movwf	___awdiv@divisor
   725  00C2  3000               	movlw	0
   726  00C3  00F4               	movwf	___awdiv@divisor+1
   727  00C4  0878               	movf	_residuo,w
   728  00C5  00AF               	movwf	??_division
   729  00C6  01B0               	clrf	??_division+1
   730  00C7  082F               	movf	??_division,w
   731  00C8  00F5               	movwf	___awdiv@dividend
   732  00C9  0830               	movf	??_division+1,w
   733  00CA  00F6               	movwf	___awdiv@dividend+1
   734  00CB  120A  118A  2025  120A  118A  	fcall	___awdiv
   735  00D0  0873               	movf	?___awdiv,w
   736  00D1  1283               	bcf	3,5	;RP0=0, select bank0
   737  00D2  1303               	bcf	3,6	;RP1=0, select bank0
   738  00D3  00B1               	movwf	??_division+2
   739  00D4  0831               	movf	??_division+2,w
   740  00D5  00B3               	movwf	_decena
   741  00D6                     l1081:
   742                           
   743                           ;Lab7.c: 152:     unidad = residuo%10;
   744  00D6  300A               	movlw	10
   745  00D7  00F3               	movwf	___awmod@divisor
   746  00D8  3000               	movlw	0
   747  00D9  00F4               	movwf	___awmod@divisor+1
   748  00DA  0878               	movf	_residuo,w
   749  00DB  00AF               	movwf	??_division
   750  00DC  01B0               	clrf	??_division+1
   751  00DD  082F               	movf	??_division,w
   752  00DE  00F5               	movwf	___awmod@dividend
   753  00DF  0830               	movf	??_division+1,w
   754  00E0  00F6               	movwf	___awmod@dividend+1
   755  00E1  120A  118A  20ED  120A  118A  	fcall	___awmod
   756  00E6  0873               	movf	?___awmod,w
   757  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   758  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   759  00E9  00B1               	movwf	??_division+2
   760  00EA  0831               	movf	??_division+2,w
   761  00EB  00B2               	movwf	_unidad
   762  00EC                     l83:
   763  00EC  0008               	return
   764  00ED                     __end_of_division:
   765                           
   766                           	psect	text3
   767  00ED                     __ptext3:	
   768 ;; *************** function ___awmod *****************
   769 ;; Defined at:
   770 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;  divisor         2    3[COMMON] int 
   773 ;;  dividend        2    5[COMMON] int 
   774 ;; Auto vars:     Size  Location     Type
   775 ;;  sign            1    2[BANK0 ] unsigned char 
   776 ;;  counter         1    1[BANK0 ] unsigned char 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  2    3[COMMON] int 
   779 ;; Registers used:
   780 ;;		wreg, status,2, status,0
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         4       0       0       0       0
   787 ;;      Locals:         0       2       0       0       0
   788 ;;      Temps:          0       1       0       0       0
   789 ;;      Totals:         4       3       0       0       0
   790 ;;Total ram usage:        7 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; Hardware stack levels required when called:    1
   793 ;; This function calls:
   794 ;;		Nothing
   795 ;; This function is called by:
   796 ;;		_division
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           
   801                           ;psect for function ___awmod
   802  00ED                     ___awmod:
   803  00ED                     l1035:	
   804                           ;incstack = 0
   805                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   806                           
   807  00ED  1283               	bcf	3,5	;RP0=0, select bank0
   808  00EE  1303               	bcf	3,6	;RP1=0, select bank0
   809  00EF  01AC               	clrf	___awmod@sign
   810  00F0                     l1037:
   811  00F0  1FF6               	btfss	___awmod@dividend+1,7
   812  00F1  28F3               	goto	u611
   813  00F2  28F4               	goto	u610
   814  00F3                     u611:
   815  00F3  28FB               	goto	l1043
   816  00F4                     u610:
   817  00F4                     l1039:
   818  00F4  09F5               	comf	___awmod@dividend,f
   819  00F5  09F6               	comf	___awmod@dividend+1,f
   820  00F6  0AF5               	incf	___awmod@dividend,f
   821  00F7  1903               	skipnz
   822  00F8  0AF6               	incf	___awmod@dividend+1,f
   823  00F9                     l1041:
   824  00F9  01AC               	clrf	___awmod@sign
   825  00FA  0AAC               	incf	___awmod@sign,f
   826  00FB                     l1043:
   827  00FB  1FF4               	btfss	___awmod@divisor+1,7
   828  00FC  28FE               	goto	u621
   829  00FD  28FF               	goto	u620
   830  00FE                     u621:
   831  00FE  2904               	goto	l1047
   832  00FF                     u620:
   833  00FF                     l1045:
   834  00FF  09F3               	comf	___awmod@divisor,f
   835  0100  09F4               	comf	___awmod@divisor+1,f
   836  0101  0AF3               	incf	___awmod@divisor,f
   837  0102  1903               	skipnz
   838  0103  0AF4               	incf	___awmod@divisor+1,f
   839  0104                     l1047:
   840  0104  0873               	movf	___awmod@divisor,w
   841  0105  0474               	iorwf	___awmod@divisor+1,w
   842  0106  1903               	btfsc	3,2
   843  0107  2909               	goto	u631
   844  0108  290A               	goto	u630
   845  0109                     u631:
   846  0109  2939               	goto	l1065
   847  010A                     u630:
   848  010A                     l1049:
   849  010A  01AB               	clrf	___awmod@counter
   850  010B  0AAB               	incf	___awmod@counter,f
   851  010C  2918               	goto	l1055
   852  010D                     l1051:
   853  010D  3001               	movlw	1
   854  010E                     u645:
   855  010E  1003               	clrc
   856  010F  0DF3               	rlf	___awmod@divisor,f
   857  0110  0DF4               	rlf	___awmod@divisor+1,f
   858  0111  3EFF               	addlw	-1
   859  0112  1D03               	skipz
   860  0113  290E               	goto	u645
   861  0114                     l1053:
   862  0114  3001               	movlw	1
   863  0115  00AA               	movwf	??___awmod
   864  0116  082A               	movf	??___awmod,w
   865  0117  07AB               	addwf	___awmod@counter,f
   866  0118                     l1055:
   867  0118  1FF4               	btfss	___awmod@divisor+1,7
   868  0119  291B               	goto	u651
   869  011A  291C               	goto	u650
   870  011B                     u651:
   871  011B  290D               	goto	l1051
   872  011C                     u650:
   873  011C                     l1057:
   874  011C  0874               	movf	___awmod@divisor+1,w
   875  011D  0276               	subwf	___awmod@dividend+1,w
   876  011E  1D03               	skipz
   877  011F  2922               	goto	u665
   878  0120  0873               	movf	___awmod@divisor,w
   879  0121  0275               	subwf	___awmod@dividend,w
   880  0122                     u665:
   881  0122  1C03               	skipc
   882  0123  2925               	goto	u661
   883  0124  2926               	goto	u660
   884  0125                     u661:
   885  0125  292C               	goto	l1061
   886  0126                     u660:
   887  0126                     l1059:
   888  0126  0873               	movf	___awmod@divisor,w
   889  0127  02F5               	subwf	___awmod@dividend,f
   890  0128  0874               	movf	___awmod@divisor+1,w
   891  0129  1C03               	skipc
   892  012A  03F6               	decf	___awmod@dividend+1,f
   893  012B  02F6               	subwf	___awmod@dividend+1,f
   894  012C                     l1061:
   895  012C  3001               	movlw	1
   896  012D                     u675:
   897  012D  1003               	clrc
   898  012E  0CF4               	rrf	___awmod@divisor+1,f
   899  012F  0CF3               	rrf	___awmod@divisor,f
   900  0130  3EFF               	addlw	-1
   901  0131  1D03               	skipz
   902  0132  292D               	goto	u675
   903  0133                     l1063:
   904  0133  3001               	movlw	1
   905  0134  02AB               	subwf	___awmod@counter,f
   906  0135  1D03               	btfss	3,2
   907  0136  2938               	goto	u681
   908  0137  2939               	goto	u680
   909  0138                     u681:
   910  0138  291C               	goto	l1057
   911  0139                     u680:
   912  0139                     l1065:
   913  0139  082C               	movf	___awmod@sign,w
   914  013A  1903               	btfsc	3,2
   915  013B  293D               	goto	u691
   916  013C  293E               	goto	u690
   917  013D                     u691:
   918  013D  2943               	goto	l1069
   919  013E                     u690:
   920  013E                     l1067:
   921  013E  09F5               	comf	___awmod@dividend,f
   922  013F  09F6               	comf	___awmod@dividend+1,f
   923  0140  0AF5               	incf	___awmod@dividend,f
   924  0141  1903               	skipnz
   925  0142  0AF6               	incf	___awmod@dividend+1,f
   926  0143                     l1069:
   927  0143  0876               	movf	___awmod@dividend+1,w
   928  0144  00F4               	movwf	?___awmod+1
   929  0145  0875               	movf	___awmod@dividend,w
   930  0146  00F3               	movwf	?___awmod
   931  0147                     l335:
   932  0147  0008               	return
   933  0148                     __end_of___awmod:
   934                           
   935                           	psect	text4
   936  0025                     __ptext4:	
   937 ;; *************** function ___awdiv *****************
   938 ;; Defined at:
   939 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  divisor         2    3[COMMON] int 
   942 ;;  dividend        2    5[COMMON] int 
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  quotient        2    3[BANK0 ] int 
   945 ;;  sign            1    2[BANK0 ] unsigned char 
   946 ;;  counter         1    1[BANK0 ] unsigned char 
   947 ;; Return value:  Size  Location     Type
   948 ;;                  2    3[COMMON] int 
   949 ;; Registers used:
   950 ;;		wreg, status,2, status,0
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         4       0       0       0       0
   957 ;;      Locals:         0       4       0       0       0
   958 ;;      Temps:          0       1       0       0       0
   959 ;;      Totals:         4       5       0       0       0
   960 ;;Total ram usage:        9 bytes
   961 ;; Hardware stack levels used:    1
   962 ;; Hardware stack levels required when called:    1
   963 ;; This function calls:
   964 ;;		Nothing
   965 ;; This function is called by:
   966 ;;		_division
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           
   971                           ;psect for function ___awdiv
   972  0025                     ___awdiv:
   973  0025                     l991:	
   974                           ;incstack = 0
   975                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   976                           
   977  0025  1283               	bcf	3,5	;RP0=0, select bank0
   978  0026  1303               	bcf	3,6	;RP1=0, select bank0
   979  0027  01AC               	clrf	___awdiv@sign
   980  0028                     l993:
   981  0028  1FF4               	btfss	___awdiv@divisor+1,7
   982  0029  282B               	goto	u511
   983  002A  282C               	goto	u510
   984  002B                     u511:
   985  002B  2833               	goto	l999
   986  002C                     u510:
   987  002C                     l995:
   988  002C  09F3               	comf	___awdiv@divisor,f
   989  002D  09F4               	comf	___awdiv@divisor+1,f
   990  002E  0AF3               	incf	___awdiv@divisor,f
   991  002F  1903               	skipnz
   992  0030  0AF4               	incf	___awdiv@divisor+1,f
   993  0031                     l997:
   994  0031  01AC               	clrf	___awdiv@sign
   995  0032  0AAC               	incf	___awdiv@sign,f
   996  0033                     l999:
   997  0033  1FF6               	btfss	___awdiv@dividend+1,7
   998  0034  2836               	goto	u521
   999  0035  2837               	goto	u520
  1000  0036                     u521:
  1001  0036  2840               	goto	l1005
  1002  0037                     u520:
  1003  0037                     l1001:
  1004  0037  09F5               	comf	___awdiv@dividend,f
  1005  0038  09F6               	comf	___awdiv@dividend+1,f
  1006  0039  0AF5               	incf	___awdiv@dividend,f
  1007  003A  1903               	skipnz
  1008  003B  0AF6               	incf	___awdiv@dividend+1,f
  1009  003C                     l1003:
  1010  003C  3001               	movlw	1
  1011  003D  00AA               	movwf	??___awdiv
  1012  003E  082A               	movf	??___awdiv,w
  1013  003F  06AC               	xorwf	___awdiv@sign,f
  1014  0040                     l1005:
  1015  0040  01AD               	clrf	___awdiv@quotient
  1016  0041  01AE               	clrf	___awdiv@quotient+1
  1017  0042                     l1007:
  1018  0042  0873               	movf	___awdiv@divisor,w
  1019  0043  0474               	iorwf	___awdiv@divisor+1,w
  1020  0044  1903               	btfsc	3,2
  1021  0045  2847               	goto	u531
  1022  0046  2848               	goto	u530
  1023  0047                     u531:
  1024  0047  287F               	goto	l1027
  1025  0048                     u530:
  1026  0048                     l1009:
  1027  0048  01AB               	clrf	___awdiv@counter
  1028  0049  0AAB               	incf	___awdiv@counter,f
  1029  004A  2856               	goto	l1015
  1030  004B                     l1011:
  1031  004B  3001               	movlw	1
  1032  004C                     u545:
  1033  004C  1003               	clrc
  1034  004D  0DF3               	rlf	___awdiv@divisor,f
  1035  004E  0DF4               	rlf	___awdiv@divisor+1,f
  1036  004F  3EFF               	addlw	-1
  1037  0050  1D03               	skipz
  1038  0051  284C               	goto	u545
  1039  0052                     l1013:
  1040  0052  3001               	movlw	1
  1041  0053  00AA               	movwf	??___awdiv
  1042  0054  082A               	movf	??___awdiv,w
  1043  0055  07AB               	addwf	___awdiv@counter,f
  1044  0056                     l1015:
  1045  0056  1FF4               	btfss	___awdiv@divisor+1,7
  1046  0057  2859               	goto	u551
  1047  0058  285A               	goto	u550
  1048  0059                     u551:
  1049  0059  284B               	goto	l1011
  1050  005A                     u550:
  1051  005A                     l1017:
  1052  005A  3001               	movlw	1
  1053  005B                     u565:
  1054  005B  1003               	clrc
  1055  005C  0DAD               	rlf	___awdiv@quotient,f
  1056  005D  0DAE               	rlf	___awdiv@quotient+1,f
  1057  005E  3EFF               	addlw	-1
  1058  005F  1D03               	skipz
  1059  0060  285B               	goto	u565
  1060  0061  0874               	movf	___awdiv@divisor+1,w
  1061  0062  0276               	subwf	___awdiv@dividend+1,w
  1062  0063  1D03               	skipz
  1063  0064  2867               	goto	u575
  1064  0065  0873               	movf	___awdiv@divisor,w
  1065  0066  0275               	subwf	___awdiv@dividend,w
  1066  0067                     u575:
  1067  0067  1C03               	skipc
  1068  0068  286A               	goto	u571
  1069  0069  286B               	goto	u570
  1070  006A                     u571:
  1071  006A  2872               	goto	l1023
  1072  006B                     u570:
  1073  006B                     l1019:
  1074  006B  0873               	movf	___awdiv@divisor,w
  1075  006C  02F5               	subwf	___awdiv@dividend,f
  1076  006D  0874               	movf	___awdiv@divisor+1,w
  1077  006E  1C03               	skipc
  1078  006F  03F6               	decf	___awdiv@dividend+1,f
  1079  0070  02F6               	subwf	___awdiv@dividend+1,f
  1080  0071                     l1021:
  1081  0071  142D               	bsf	___awdiv@quotient,0
  1082  0072                     l1023:
  1083  0072  3001               	movlw	1
  1084  0073                     u585:
  1085  0073  1003               	clrc
  1086  0074  0CF4               	rrf	___awdiv@divisor+1,f
  1087  0075  0CF3               	rrf	___awdiv@divisor,f
  1088  0076  3EFF               	addlw	-1
  1089  0077  1D03               	skipz
  1090  0078  2873               	goto	u585
  1091  0079                     l1025:
  1092  0079  3001               	movlw	1
  1093  007A  02AB               	subwf	___awdiv@counter,f
  1094  007B  1D03               	btfss	3,2
  1095  007C  287E               	goto	u591
  1096  007D  287F               	goto	u590
  1097  007E                     u591:
  1098  007E  285A               	goto	l1017
  1099  007F                     u590:
  1100  007F                     l1027:
  1101  007F  082C               	movf	___awdiv@sign,w
  1102  0080  1903               	btfsc	3,2
  1103  0081  2883               	goto	u601
  1104  0082  2884               	goto	u600
  1105  0083                     u601:
  1106  0083  2889               	goto	l1031
  1107  0084                     u600:
  1108  0084                     l1029:
  1109  0084  09AD               	comf	___awdiv@quotient,f
  1110  0085  09AE               	comf	___awdiv@quotient+1,f
  1111  0086  0AAD               	incf	___awdiv@quotient,f
  1112  0087  1903               	skipnz
  1113  0088  0AAE               	incf	___awdiv@quotient+1,f
  1114  0089                     l1031:
  1115  0089  082E               	movf	___awdiv@quotient+1,w
  1116  008A  00F4               	movwf	?___awdiv+1
  1117  008B  082D               	movf	___awdiv@quotient,w
  1118  008C  00F3               	movwf	?___awdiv
  1119  008D                     l322:
  1120  008D  0008               	return
  1121  008E                     __end_of___awdiv:
  1122                           
  1123                           	psect	text5
  1124  0148                     __ptext5:	
  1125 ;; *************** function _isr *****************
  1126 ;; Defined at:
  1127 ;;		line 45 in file "Lab7.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;		None
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;		None
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1141 ;;      Params:         0       0       0       0       0
  1142 ;;      Locals:         0       0       0       0       0
  1143 ;;      Temps:          3       0       0       0       0
  1144 ;;      Totals:         3       0       0       0       0
  1145 ;;Total ram usage:        3 bytes
  1146 ;; Hardware stack levels used:    1
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		Interrupt level 1
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           
  1155                           ;psect for function _isr
  1156  0148                     _isr:
  1157  0148                     i1l949:
  1158                           
  1159                           ;Lab7.c: 47:     if(T0IF == 1)
  1160  0148  1D0B               	btfss	11,2	;volatile
  1161  0149  294B               	goto	u45_21
  1162  014A  294C               	goto	u45_20
  1163  014B                     u45_21:
  1164  014B  297E               	goto	i1l977
  1165  014C                     u45_20:
  1166  014C                     i1l951:
  1167                           
  1168                           ;Lab7.c: 48:     {;Lab7.c: 49:         PORTAbits.RA2 = 0;
  1169  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1170  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1171  014E  1105               	bcf	5,2	;volatile
  1172                           
  1173                           ;Lab7.c: 50:         PORTAbits.RA0 = 1;
  1174  014F  1405               	bsf	5,0	;volatile
  1175  0150                     i1l953:
  1176                           
  1177                           ;Lab7.c: 51:         PORTD = (tablita[centena]);
  1178  0150  0834               	movf	_centena,w
  1179  0151  3E20               	addlw	(low (_tablita| 0))& (0+255)
  1180  0152  0084               	movwf	4
  1181  0153  1383               	bcf	3,7	;select IRP bank0
  1182  0154  0800               	movf	0,w
  1183  0155  0088               	movwf	8	;volatile
  1184  0156                     i1l955:
  1185                           
  1186                           ;Lab7.c: 52:         multiplex = 0b00000001;
  1187  0156  3001               	movlw	1
  1188  0157  00F9               	movwf	_multiplex
  1189  0158  3000               	movlw	0
  1190  0159  00FA               	movwf	_multiplex+1
  1191  015A                     i1l957:
  1192                           
  1193                           ;Lab7.c: 54:         if(multiplex == 0b00000001)
  1194  015A  0379               	decf	_multiplex,w
  1195  015B  047A               	iorwf	_multiplex+1,w
  1196  015C  1D03               	btfss	3,2
  1197  015D  295F               	goto	u46_21
  1198  015E  2960               	goto	u46_20
  1199  015F                     u46_21:
  1200  015F  296B               	goto	i1l965
  1201  0160                     u46_20:
  1202  0160                     i1l959:
  1203                           
  1204                           ;Lab7.c: 55:         {;Lab7.c: 56:             PORTAbits.RA0 = 0;
  1205  0160  1005               	bcf	5,0	;volatile
  1206                           
  1207                           ;Lab7.c: 57:             PORTAbits.RA1 = 1;
  1208  0161  1485               	bsf	5,1	;volatile
  1209  0162                     i1l961:
  1210                           
  1211                           ;Lab7.c: 58:             PORTD = (tablita[decena]);
  1212  0162  0833               	movf	_decena,w
  1213  0163  3E20               	addlw	(low (_tablita| 0))& (0+255)
  1214  0164  0084               	movwf	4
  1215  0165  0800               	movf	0,w
  1216  0166  0088               	movwf	8	;volatile
  1217  0167                     i1l963:
  1218                           
  1219                           ;Lab7.c: 59:             multiplex = 0b00000010;
  1220  0167  3002               	movlw	2
  1221  0168  00F9               	movwf	_multiplex
  1222  0169  3000               	movlw	0
  1223  016A  00FA               	movwf	_multiplex+1
  1224  016B                     i1l965:
  1225                           
  1226                           ;Lab7.c: 61:         if (multiplex == 0b00000010)
  1227  016B  3002               	movlw	2
  1228  016C  0679               	xorwf	_multiplex,w
  1229  016D  047A               	iorwf	_multiplex+1,w
  1230  016E  1D03               	btfss	3,2
  1231  016F  2971               	goto	u47_21
  1232  0170  2972               	goto	u47_20
  1233  0171                     u47_21:
  1234  0171  297B               	goto	i1l973
  1235  0172                     u47_20:
  1236  0172                     i1l967:
  1237                           
  1238                           ;Lab7.c: 62:         {;Lab7.c: 63:             PORTAbits.RA1 = 0;
  1239  0172  1085               	bcf	5,1	;volatile
  1240                           
  1241                           ;Lab7.c: 64:             PORTAbits.RA2 = 1;
  1242  0173  1505               	bsf	5,2	;volatile
  1243  0174                     i1l969:
  1244                           
  1245                           ;Lab7.c: 65:             PORTD = (tablita[unidad]);
  1246  0174  0832               	movf	_unidad,w
  1247  0175  3E20               	addlw	(low (_tablita| 0))& (0+255)
  1248  0176  0084               	movwf	4
  1249  0177  0800               	movf	0,w
  1250  0178  0088               	movwf	8	;volatile
  1251  0179                     i1l971:
  1252                           
  1253                           ;Lab7.c: 66:             multiplex = 0b00000000;
  1254  0179  01F9               	clrf	_multiplex
  1255  017A  01FA               	clrf	_multiplex+1
  1256  017B                     i1l973:
  1257                           
  1258                           ;Lab7.c: 68:         INTCONbits.T0IF = 0;
  1259  017B  110B               	bcf	11,2	;volatile
  1260  017C                     i1l975:
  1261                           
  1262                           ;Lab7.c: 69:         TMR0 = 255;
  1263  017C  30FF               	movlw	255
  1264  017D  0081               	movwf	1	;volatile
  1265  017E                     i1l977:
  1266                           
  1267                           ;Lab7.c: 71:     if (RBIF == 1)
  1268  017E  1C0B               	btfss	11,0	;volatile
  1269  017F  2981               	goto	u48_21
  1270  0180  2982               	goto	u48_20
  1271  0181                     u48_21:
  1272  0181  2993               	goto	i1l69
  1273  0182                     u48_20:
  1274  0182                     i1l979:
  1275                           
  1276                           ;Lab7.c: 72:     {;Lab7.c: 73:         if(PORTBbits.RB0 == 0)
  1277  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1278  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1279  0184  1806               	btfsc	6,0	;volatile
  1280  0185  2987               	goto	u49_21
  1281  0186  2988               	goto	u49_20
  1282  0187                     u49_21:
  1283  0187  298B               	goto	i1l983
  1284  0188                     u49_20:
  1285  0188                     i1l981:
  1286                           
  1287                           ;Lab7.c: 74:         {;Lab7.c: 75:             PORTC = PORTC + 1;
  1288  0188  0807               	movf	7,w	;volatile
  1289  0189  3E01               	addlw	1
  1290  018A  0087               	movwf	7	;volatile
  1291  018B                     i1l983:
  1292                           
  1293                           ;Lab7.c: 77:         if(PORTBbits.RB1 == 0)
  1294  018B  1886               	btfsc	6,1	;volatile
  1295  018C  298E               	goto	u50_21
  1296  018D  298F               	goto	u50_20
  1297  018E                     u50_21:
  1298  018E  2992               	goto	i1l987
  1299  018F                     u50_20:
  1300  018F                     i1l985:
  1301                           
  1302                           ;Lab7.c: 78:         {;Lab7.c: 79:             PORTC = PORTC - 1;
  1303  018F  0807               	movf	7,w	;volatile
  1304  0190  3EFF               	addlw	255
  1305  0191  0087               	movwf	7	;volatile
  1306  0192                     i1l987:
  1307                           
  1308                           ;Lab7.c: 81:         INTCONbits.RBIF = 0;
  1309  0192  100B               	bcf	11,0	;volatile
  1310  0193                     i1l69:
  1311  0193  0872               	movf	??_isr+2,w
  1312  0194  008A               	movwf	10
  1313  0195  0871               	movf	??_isr+1,w
  1314  0196  0084               	movwf	4
  1315  0197  0E70               	swapf	??_isr,w
  1316  0198  0083               	movwf	3
  1317  0199  0EFE               	swapf	btemp,f
  1318  019A  0E7E               	swapf	btemp,w
  1319  019B  0009               	retfie
  1320  019C                     __end_of_isr:
  1321  007E                     btemp	set	126	;btemp
  1322  007E                     wtemp0	set	126
  1323                           
  1324                           	psect	intentry
  1325  0004                     __pintentry:	
  1326                           ;incstack = 0
  1327                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1328                           
  1329  0004                     interrupt_function:
  1330  007E                     saved_w	set	btemp
  1331  0004  00FE               	movwf	btemp
  1332  0005  0E03               	swapf	3,w
  1333  0006  00F0               	movwf	??_isr
  1334  0007  0804               	movf	4,w
  1335  0008  00F1               	movwf	??_isr+1
  1336  0009  080A               	movf	10,w
  1337  000A  00F2               	movwf	??_isr+2
  1338  000B  120A  118A  2948   	ljmp	_isr
  1339                           
  1340                           	psect	config
  1341                           
  1342                           ;Config register CONFIG1 @ 0x2007
  1343                           ;	Oscillator Selection bits
  1344                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1345                           ;	Watchdog Timer Enable bit
  1346                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1347                           ;	Power-up Timer Enable bit
  1348                           ;	PWRTE = OFF, PWRT disabled
  1349                           ;	RE3/MCLR pin function select bit
  1350                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1351                           ;	Code Protection bit
  1352                           ;	CP = OFF, Program memory code protection is disabled
  1353                           ;	Data Code Protection bit
  1354                           ;	CPD = OFF, Data memory code protection is disabled
  1355                           ;	Brown Out Reset Selection bits
  1356                           ;	BOREN = OFF, BOR disabled
  1357                           ;	Internal External Switchover bit
  1358                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1359                           ;	Fail-Safe Clock Monitor Enabled bit
  1360                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1361                           ;	Low Voltage Programming Enable bit
  1362                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1363                           ;	In-Circuit Debugger Mode bit
  1364                           ;	DEBUG = 0x1, unprogrammed default
  1365  2007                     	org	8199
  1366  2007  20D4               	dw	8404
  1367                           
  1368                           ;Config register CONFIG2 @ 0x2008
  1369                           ;	Brown-out Reset Selection bit
  1370                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1371                           ;	Flash Program Memory Self Write Enable bits
  1372                           ;	WRT = OFF, Write protection off
  1373  2008                     	org	8200
  1374  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      8      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _division->___awdiv
    _division->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_division
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1598
                           _division
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _division                                             3     3      0    1598
                                              5 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              3 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              3 COMMON     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _division
     ___awdiv
     ___awmod
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      15       5       26.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      12        0.0%
ABS                  0      0      20       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Apr 18 21:26:25 2021

                      pc 0002                       l80 01C4                       l74 01DD  
                     l83 00EC             ___awdiv@sign 002C                       fsr 0004  
                    l322 008D                      l335 0147                      l801 01C2  
                    l803 01C3                      l761 01A3                      l771 01B2  
                    l763 01A4                      l781 01B7                      l773 01B3  
                    l765 01A5                      l757 019C                      l791 01BD  
                    l783 01B8                      l775 01B4                      l767 01A6  
                    l759 01A0                      l793 01BE                      l785 01B9  
                    l777 01B5                      l769 01AF                      l795 01BF  
                    l787 01BA                      l779 01B6                      l797 01C0  
                    l789 01BB                      l991 0025                      l799 01C1  
                    l993 0028                      l995 002C                      l997 0031  
                    l999 0033                      u510 002C                      u511 002B  
                    u600 0084                      u520 0037                      u601 0083  
                    u521 0036                      u530 0048                      u610 00F4  
                    u531 0047                      u611 00F3                      u620 00FF  
                    u621 00FE                      u550 005A                      u630 010A  
                    u551 0059                      u631 0109                      u545 004C  
                    u570 006B                      u650 011C                      u571 006A  
                    u651 011B                      u660 0126                      u565 005B  
                    u661 0125                      u645 010E                      u590 007F  
                    u591 007E                      u575 0067                      u680 0139  
                    u585 0073                      u681 0138                      u665 0122  
                    u690 013E                      u691 013D                      u675 012D  
                    _isr 0148                      fsr0 0004                      indf 0000  
           ___awmod@sign 002C                     l1001 0037                     l1011 004B  
                   l1003 003C                     l1021 0071                     l1013 0052  
                   l1005 0040                     l1031 0089                     l1023 0072  
                   l1015 0056                     l1007 0042                     l1025 0079  
                   l1017 005A                     l1009 0048                     l1041 00F9  
                   l1019 006B                     l1027 007F                     l1051 010D  
                   l1043 00FB                     l1035 00ED                     l1029 0084  
                   l1061 012C                     l1053 0114                     l1045 00FF  
                   l1037 00F0                     l1063 0133                     l1055 0118  
                   l1047 0104                     l1039 00F4                     l1057 011C  
                   l1049 010A                     l1065 0139                     l1081 00D6  
                   l1073 008E                     l1067 013E                     l1059 0126  
                   l1075 0094                     l1083 01D8                     l1069 0143  
                   l1077 00AA                     l1079 00C0                     ?_isr 0070  
                   _T0IF 005A                     _RBIF 0058                     i1l69 0193  
                   _TMR0 0001                     _WPUB 0095                     _main 01D8  
                   btemp 007E                     start 000E                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 008E          __end_of___awmod 0148  
                  _ANSEL 0188          ___awdiv@divisor 0073                    i1l951 014C  
                  i1l961 0162                    i1l953 0150                    i1l971 0179  
                  i1l963 0167                    i1l955 0156                    i1l981 0188  
                  i1l973 017B                    i1l965 016B                    i1l957 015A  
                  i1l949 0148                    i1l983 018B                    i1l975 017C  
                  i1l967 0172                    i1l959 0160                    i1l985 018F  
                  i1l969 0174                    i1l977 017E                    i1l987 0192  
                  i1l979 0182          ___awdiv@counter 002B                    u50_20 018F  
                  u50_21 018E                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    u45_20 014C  
                  u45_21 014B                    u46_20 0160                    u46_21 015F  
                  u47_20 0172                    u47_21 0171                    u48_20 0182  
                  u48_21 0181                    u49_20 0188                    u49_21 0187  
                  _TRISC 0087                    _TRISD 0088                    _setup 019C  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 01E6                   ??_main 0077  
       ___awdiv@dividend 0075                   ?_setup 0070                   _ANSELH 0189  
       __end_of_division 00ED                ??___awdiv 002A                   _decena 0033  
              ??___awmod 002A         ___awdiv@quotient 002D          ___awmod@divisor 0073  
        ___awmod@counter 002B                   _unidad 0032                   saved_w 007E  
__end_of__initialization 0021           __pcstackCOMMON 0070             __pidataBANK0 01E6  
          __end_of_setup 01C5           _OPTION_REGbits 0081                  ??_setup 0073  
             __pnvCOMMON 0077               __pmaintext 01D8               __pintentry 0004  
              ?_division 0070                  ___awdiv 0025                  ___awmod 00ED  
                _centena 0034                  __ptext1 019C                  __ptext2 008E  
                __ptext3 00ED                  __ptext4 0025                  __ptext5 0148  
                _counter 0077             __size_of_isr 0054         ___awmod@dividend 0075  
                _tablita 0020                  _residuo 0078     end_of_initialization 0021  
             ??_division 002F                _PORTAbits 0005                _PORTBbits 0006  
              _TRISAbits 0085                _TRISBbits 0086      start_initialization 0011  
            __end_of_isr 019C               init_fetch0 01C5              __pdataBANK0 0020  
            __pbssCOMMON 0079                ___latbits 0002            __pcstackBANK0 002A  
      __size_of_division 005F                __pnvBANK0 0032                 ?___awdiv 0073  
               ?___awmod 0073           __size_of_setup 0029        interrupt_function 0004  
               _IOCBbits 0096                _multiplex 0079         __size_of___awdiv 0069  
       __size_of___awmod 005B                 _division 008E            __size_of_main 000E  
             _INTCONbits 000B                 init_ram0 01C9                 intlevel1 0000  
             _OSCCONbits 008F  
