

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun May 09 23:30:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  000C                     _PIR1bits	set	12
   206  0018                     _RCSTAbits	set	24
   207  000B                     _INTCONbits	set	11
   208  0006                     _PORTB	set	6
   209  0005                     _PORTA	set	5
   210  001A                     _RCREG	set	26
   211  0019                     _TXREG	set	25
   212  0065                     _RCIF	set	101
   213  0064                     _TXIF	set	100
   214  009A                     _SPBRGH	set	154
   215  0099                     _SPBRG	set	153
   216  0098                     _TXSTAbits	set	152
   217  008C                     _PIE1bits	set	140
   218  008F                     _OSCCONbits	set	143
   219  0086                     _TRISB	set	134
   220  0085                     _TRISA	set	133
   221  0187                     _BAUDCTLbits	set	391
   222  0189                     _ANSELH	set	393
   223  0188                     _ANSEL	set	392
   224                           
   225                           	psect	strings
   226  0003                     __pstrings:
   227  0003                     stringtab:
   228  0003                     __stringtab:
   229  0003                     stringcode:	
   230                           ;	String table - string pointers are 1 byte each
   231                           
   232  0003                     stringdir:
   233  0003  3000               	movlw	high stringdir
   234  0004  008A               	movwf	10
   235  0005  0804               	movf	4,w
   236  0006  0A84               	incf	4,f
   237  0007  0782               	addwf	2,f
   238  0008                     __stringbase:
   239  0008  3400               	retlw	0
   240  0009                     __end_of__stringtab:
   241  0009                     STR_6:
   242  0009  340D               	retlw	13
   243  000A  3420               	retlw	32	;' '
   244  000B  3449               	retlw	73	;'I'
   245  000C  346E               	retlw	110	;'n'
   246  000D  3473               	retlw	115	;'s'
   247  000E  3465               	retlw	101	;'e'
   248  000F  3472               	retlw	114	;'r'
   249  0010  3474               	retlw	116	;'t'
   250  0011  3461               	retlw	97	;'a'
   251  0012  3472               	retlw	114	;'r'
   252  0013  3420               	retlw	32	;' '
   253  0014  3463               	retlw	99	;'c'
   254  0015  3461               	retlw	97	;'a'
   255  0016  3472               	retlw	114	;'r'
   256  0017  3461               	retlw	97	;'a'
   257  0018  3463               	retlw	99	;'c'
   258  0019  3474               	retlw	116	;'t'
   259  001A  3465               	retlw	101	;'e'
   260  001B  3472               	retlw	114	;'r'
   261  001C  3420               	retlw	32	;' '
   262  001D  3470               	retlw	112	;'p'
   263  001E  3461               	retlw	97	;'a'
   264  001F  3472               	retlw	114	;'r'
   265  0020  3461               	retlw	97	;'a'
   266  0021  3420               	retlw	32	;' '
   267  0022  3464               	retlw	100	;'d'
   268  0023  3465               	retlw	101	;'e'
   269  0024  3473               	retlw	115	;'s'
   270  0025  3470               	retlw	112	;'p'
   271  0026  346C               	retlw	108	;'l'
   272  0027  3465               	retlw	101	;'e'
   273  0028  3467               	retlw	103	;'g'
   274  0029  3461               	retlw	97	;'a'
   275  002A  3472               	retlw	114	;'r'
   276  002B  3420               	retlw	32	;' '
   277  002C  3465               	retlw	101	;'e'
   278  002D  346E               	retlw	110	;'n'
   279  002E  3420               	retlw	32	;' '
   280  002F  3450               	retlw	80	;'P'
   281  0030  344F               	retlw	79	;'O'
   282  0031  3452               	retlw	82	;'R'
   283  0032  3454               	retlw	84	;'T'
   284  0033  3441               	retlw	65	;'A'
   285  0034  343A               	retlw	58	;':'
   286  0035  3420               	retlw	32	;' '
   287  0036  340D               	retlw	13
   288  0037  3400               	retlw	0
   289  0038                     STR_7:
   290  0038  340D               	retlw	13
   291  0039  3420               	retlw	32	;' '
   292  003A  3449               	retlw	73	;'I'
   293  003B  346E               	retlw	110	;'n'
   294  003C  3473               	retlw	115	;'s'
   295  003D  3465               	retlw	101	;'e'
   296  003E  3472               	retlw	114	;'r'
   297  003F  3474               	retlw	116	;'t'
   298  0040  3461               	retlw	97	;'a'
   299  0041  3472               	retlw	114	;'r'
   300  0042  3420               	retlw	32	;' '
   301  0043  3463               	retlw	99	;'c'
   302  0044  3461               	retlw	97	;'a'
   303  0045  3472               	retlw	114	;'r'
   304  0046  3461               	retlw	97	;'a'
   305  0047  3463               	retlw	99	;'c'
   306  0048  3474               	retlw	116	;'t'
   307  0049  3465               	retlw	101	;'e'
   308  004A  3472               	retlw	114	;'r'
   309  004B  3420               	retlw	32	;' '
   310  004C  3470               	retlw	112	;'p'
   311  004D  3461               	retlw	97	;'a'
   312  004E  3472               	retlw	114	;'r'
   313  004F  3461               	retlw	97	;'a'
   314  0050  3420               	retlw	32	;' '
   315  0051  3464               	retlw	100	;'d'
   316  0052  3465               	retlw	101	;'e'
   317  0053  3473               	retlw	115	;'s'
   318  0054  3470               	retlw	112	;'p'
   319  0055  346C               	retlw	108	;'l'
   320  0056  3465               	retlw	101	;'e'
   321  0057  3467               	retlw	103	;'g'
   322  0058  3461               	retlw	97	;'a'
   323  0059  3472               	retlw	114	;'r'
   324  005A  3420               	retlw	32	;' '
   325  005B  3465               	retlw	101	;'e'
   326  005C  346E               	retlw	110	;'n'
   327  005D  3420               	retlw	32	;' '
   328  005E  3450               	retlw	80	;'P'
   329  005F  344F               	retlw	79	;'O'
   330  0060  3452               	retlw	82	;'R'
   331  0061  3454               	retlw	84	;'T'
   332  0062  3442               	retlw	66	;'B'
   333  0063  343A               	retlw	58	;':'
   334  0064  3420               	retlw	32	;' '
   335  0065  340D               	retlw	13
   336  0066  3400               	retlw	0
   337  0067                     STR_5:
   338  0067  340D               	retlw	13
   339  0068  3420               	retlw	32	;' '
   340  0069  3443               	retlw	67	;'C'
   341  006A  3461               	retlw	97	;'a'
   342  006B  3464               	retlw	100	;'d'
   343  006C  3465               	retlw	101	;'e'
   344  006D  346E               	retlw	110	;'n'
   345  006E  3461               	retlw	97	;'a'
   346  006F  3420               	retlw	32	;' '
   347  0070  3464               	retlw	100	;'d'
   348  0071  3465               	retlw	101	;'e'
   349  0072  3420               	retlw	32	;' '
   350  0073  3463               	retlw	99	;'c'
   351  0074  3461               	retlw	97	;'a'
   352  0075  3472               	retlw	114	;'r'
   353  0076  3461               	retlw	97	;'a'
   354  0077  3463               	retlw	99	;'c'
   355  0078  3474               	retlw	116	;'t'
   356  0079  3465               	retlw	101	;'e'
   357  007A  3472               	retlw	114	;'r'
   358  007B  3465               	retlw	101	;'e'
   359  007C  3473               	retlw	115	;'s'
   360  007D  3420               	retlw	32	;' '
   361  007E  3463               	retlw	99	;'c'
   362  007F  3461               	retlw	97	;'a'
   363  0080  3472               	retlw	114	;'r'
   364  0081  3467               	retlw	103	;'g'
   365  0082  3461               	retlw	97	;'a'
   366  0083  346E               	retlw	110	;'n'
   367  0084  3464               	retlw	100	;'d'
   368  0085  346F               	retlw	111	;'o'
   369  0086  342E               	retlw	46	;'.'
   370  0087  342E               	retlw	46	;'.'
   371  0088  342E               	retlw	46	;'.'
   372  0089  3420               	retlw	32	;' '
   373  008A  340D               	retlw	13
   374  008B  3400               	retlw	0
   375  008C                     STR_2:
   376  008C  3420               	retlw	32	;' '
   377  008D  3431               	retlw	49	;'1'
   378  008E  342E               	retlw	46	;'.'
   379  008F  3420               	retlw	32	;' '
   380  0090  3444               	retlw	68	;'D'
   381  0091  3465               	retlw	101	;'e'
   382  0092  3473               	retlw	115	;'s'
   383  0093  3470               	retlw	112	;'p'
   384  0094  346C               	retlw	108	;'l'
   385  0095  3465               	retlw	101	;'e'
   386  0096  3467               	retlw	103	;'g'
   387  0097  3461               	retlw	97	;'a'
   388  0098  3472               	retlw	114	;'r'
   389  0099  3420               	retlw	32	;' '
   390  009A  3463               	retlw	99	;'c'
   391  009B  3461               	retlw	97	;'a'
   392  009C  3464               	retlw	100	;'d'
   393  009D  3465               	retlw	101	;'e'
   394  009E  346E               	retlw	110	;'n'
   395  009F  3461               	retlw	97	;'a'
   396  00A0  3420               	retlw	32	;' '
   397  00A1  3464               	retlw	100	;'d'
   398  00A2  3465               	retlw	101	;'e'
   399  00A3  3420               	retlw	32	;' '
   400  00A4  3463               	retlw	99	;'c'
   401  00A5  3461               	retlw	97	;'a'
   402  00A6  3472               	retlw	114	;'r'
   403  00A7  3461               	retlw	97	;'a'
   404  00A8  3463               	retlw	99	;'c'
   405  00A9  3474               	retlw	116	;'t'
   406  00AA  3465               	retlw	101	;'e'
   407  00AB  3472               	retlw	114	;'r'
   408  00AC  3465               	retlw	101	;'e'
   409  00AD  3473               	retlw	115	;'s'
   410  00AE  3420               	retlw	32	;' '
   411  00AF  340D               	retlw	13
   412  00B0  3400               	retlw	0
   413  00B1                     STR_3:
   414  00B1  3420               	retlw	32	;' '
   415  00B2  3432               	retlw	50	;'2'
   416  00B3  342E               	retlw	46	;'.'
   417  00B4  3420               	retlw	32	;' '
   418  00B5  3444               	retlw	68	;'D'
   419  00B6  3465               	retlw	101	;'e'
   420  00B7  3473               	retlw	115	;'s'
   421  00B8  3470               	retlw	112	;'p'
   422  00B9  346C               	retlw	108	;'l'
   423  00BA  3465               	retlw	101	;'e'
   424  00BB  3467               	retlw	103	;'g'
   425  00BC  3461               	retlw	97	;'a'
   426  00BD  3472               	retlw	114	;'r'
   427  00BE  3420               	retlw	32	;' '
   428  00BF  3450               	retlw	80	;'P'
   429  00C0  344F               	retlw	79	;'O'
   430  00C1  3452               	retlw	82	;'R'
   431  00C2  3454               	retlw	84	;'T'
   432  00C3  3441               	retlw	65	;'A'
   433  00C4  3420               	retlw	32	;' '
   434  00C5  340D               	retlw	13
   435  00C6  3420               	retlw	32	;' '
   436  00C7  3400               	retlw	0
   437  00C8                     STR_1:
   438  00C8  340D               	retlw	13
   439  00C9  3420               	retlw	32	;' '
   440  00CA  3445               	retlw	69	;'E'
   441  00CB  346C               	retlw	108	;'l'
   442  00CC  3469               	retlw	105	;'i'
   443  00CD  346A               	retlw	106	;'j'
   444  00CE  3461               	retlw	97	;'a'
   445  00CF  3420               	retlw	32	;' '
   446  00D0  3475               	retlw	117	;'u'
   447  00D1  346E               	retlw	110	;'n'
   448  00D2  3461               	retlw	97	;'a'
   449  00D3  3420               	retlw	32	;' '
   450  00D4  346F               	retlw	111	;'o'
   451  00D5  3470               	retlw	112	;'p'
   452  00D6  3463               	retlw	99	;'c'
   453  00D7  3469               	retlw	105	;'i'
   454  00D8  346F               	retlw	111	;'o'
   455  00D9  346E               	retlw	110	;'n'
   456  00DA  343A               	retlw	58	;':'
   457  00DB  3420               	retlw	32	;' '
   458  00DC  340D               	retlw	13
   459  00DD  3400               	retlw	0
   460  00DE                     STR_4:
   461  00DE  3420               	retlw	32	;' '
   462  00DF  3433               	retlw	51	;'3'
   463  00E0  342E               	retlw	46	;'.'
   464  00E1  3420               	retlw	32	;' '
   465  00E2  3444               	retlw	68	;'D'
   466  00E3  3465               	retlw	101	;'e'
   467  00E4  3473               	retlw	115	;'s'
   468  00E5  3470               	retlw	112	;'p'
   469  00E6  346C               	retlw	108	;'l'
   470  00E7  3465               	retlw	101	;'e'
   471  00E8  3467               	retlw	103	;'g'
   472  00E9  3461               	retlw	97	;'a'
   473  00EA  3472               	retlw	114	;'r'
   474  00EB  3420               	retlw	32	;' '
   475  00EC  3450               	retlw	80	;'P'
   476  00ED  344F               	retlw	79	;'O'
   477  00EE  3452               	retlw	82	;'R'
   478  00EF  3454               	retlw	84	;'T'
   479  00F0  3442               	retlw	66	;'B'
   480  00F1  3420               	retlw	32	;' '
   481  00F2  340D               	retlw	13
   482  00F3  3400               	retlw	0
   483                           
   484                           	psect	cinit
   485  07FC                     start_initialization:	
   486                           ; #config settings
   487                           
   488  07FC                     __initialization:
   489  07FC                     end_of_initialization:	
   490                           ;End of C runtime variable initialization code
   491                           
   492  07FC                     __end_of__initialization:
   493  07FC  0183               	clrf	3
   494  07FD  120A  118A  2F0C   	ljmp	_main	;jump to C main() function
   495                           
   496                           	psect	cstackCOMMON
   497  0070                     __pcstackCOMMON:
   498  0070                     ?_setup:
   499  0070                     ??_setup:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_text:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_main:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_putch:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ??_putch:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_printf:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     putch@data:	
   518                           ; 2 bytes @ 0x0
   519                           
   520                           
   521                           ; 1 bytes @ 0x0
   522  0070                     	ds	1
   523  0071                     ??_printf:
   524                           
   525                           ; 1 bytes @ 0x1
   526  0071                     	ds	1
   527  0072                     printf@ap:
   528                           
   529                           ; 1 bytes @ 0x2
   530  0072                     	ds	1
   531  0073                     printf@c:
   532                           
   533                           ; 1 bytes @ 0x3
   534  0073                     	ds	1
   535  0074                     printf@f:
   536                           
   537                           ; 1 bytes @ 0x4
   538  0074                     	ds	1
   539  0075                     ??_text:
   540                           
   541                           ; 1 bytes @ 0x5
   542  0075                     	ds	3
   543  0078                     ??_main:
   544                           
   545                           	psect	maintext
   546  070C                     __pmaintext:	
   547                           ; 1 bytes @ 0x8
   548 ;;
   549 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   550 ;;
   551 ;; *************** function _main *****************
   552 ;; Defined at:
   553 ;;		line 145 in file "Lab10.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;		None
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : B00/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   567 ;;      Params:         0       0       0       0       0
   568 ;;      Locals:         0       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0
   570 ;;      Totals:         0       0       0       0       0
   571 ;;Total ram usage:        0 bytes
   572 ;; Hardware stack levels required when called:    3
   573 ;; This function calls:
   574 ;;		_setup
   575 ;;		_text
   576 ;; This function is called by:
   577 ;;		Startup code after reset
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           
   582                           ;psect for function _main
   583  070C                     _main:
   584  070C                     l803:	
   585                           ;incstack = 0
   586                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   587                           
   588                           
   589                           ;Lab10.c: 147:     setup();
   590  070C  120A  118A  2739  120A  118A  	fcall	_setup
   591  0711                     l805:
   592                           
   593                           ;Lab10.c: 150:     {;Lab10.c: 151:         text();
   594  0711  120A  118A  2766  120A  118A  	fcall	_text
   595  0716  2F11               	goto	l805
   596  0717  120A  118A  2800   	ljmp	start
   597  071A                     __end_of_main:
   598                           
   599                           	psect	text1
   600  0766                     __ptext1:	
   601 ;; *************** function _text *****************
   602 ;; Defined at:
   603 ;;		line 164 in file "Lab10.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;		None
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   617 ;;      Params:         0       0       0       0       0
   618 ;;      Locals:         0       0       0       0       0
   619 ;;      Temps:          3       0       0       0       0
   620 ;;      Totals:         3       0       0       0       0
   621 ;;Total ram usage:        3 bytes
   622 ;; Hardware stack levels used:    1
   623 ;; Hardware stack levels required when called:    2
   624 ;; This function calls:
   625 ;;		_printf
   626 ;; This function is called by:
   627 ;;		_main
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           
   632                           ;psect for function _text
   633  0766                     _text:
   634  0766                     l773:	
   635                           ;incstack = 0
   636                           ; Regs used in _text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   637                           
   638                           
   639                           ;Lab10.c: 167:     _delay((unsigned long)((250)*(8000000/4000.0)));
   640  0766  3003               	movlw	3
   641  0767  00F7               	movwf	??_text+2
   642  0768  308A               	movlw	138
   643  0769  00F6               	movwf	??_text+1
   644  076A  3055               	movlw	85
   645  076B  00F5               	movwf	??_text
   646  076C                     u167:
   647  076C  0BF5               	decfsz	??_text,f
   648  076D  2F6C               	goto	u167
   649  076E  0BF6               	decfsz	??_text+1,f
   650  076F  2F6C               	goto	u167
   651  0770  0BF7               	decfsz	??_text+2,f
   652  0771  2F6C               	goto	u167
   653  0772  2F73               	nop2
   654  0773                     l775:
   655                           
   656                           ;Lab10.c: 168:     printf("\r Elija una opcion: \r");
   657  0773  30C0               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   658  0774  120A  118A  271A  120A  118A  	fcall	_printf
   659  0779                     l777:
   660                           
   661                           ;Lab10.c: 170:     _delay((unsigned long)((250)*(8000000/4000.0)));
   662  0779  3003               	movlw	3
   663  077A  00F7               	movwf	??_text+2
   664  077B  308A               	movlw	138
   665  077C  00F6               	movwf	??_text+1
   666  077D  3055               	movlw	85
   667  077E  00F5               	movwf	??_text
   668  077F                     u177:
   669  077F  0BF5               	decfsz	??_text,f
   670  0780  2F7F               	goto	u177
   671  0781  0BF6               	decfsz	??_text+1,f
   672  0782  2F7F               	goto	u177
   673  0783  0BF7               	decfsz	??_text+2,f
   674  0784  2F7F               	goto	u177
   675  0785  2F86               	nop2
   676                           
   677                           ;Lab10.c: 171:     printf(" 1. Desplegar cadena de caracteres \r");
   678  0786  3084               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   679  0787  120A  118A  271A  120A  118A  	fcall	_printf
   680  078C                     l779:
   681                           
   682                           ;Lab10.c: 173:     _delay((unsigned long)((250)*(8000000/4000.0)));
   683  078C  3003               	movlw	3
   684  078D  00F7               	movwf	??_text+2
   685  078E  308A               	movlw	138
   686  078F  00F6               	movwf	??_text+1
   687  0790  3055               	movlw	85
   688  0791  00F5               	movwf	??_text
   689  0792                     u187:
   690  0792  0BF5               	decfsz	??_text,f
   691  0793  2F92               	goto	u187
   692  0794  0BF6               	decfsz	??_text+1,f
   693  0795  2F92               	goto	u187
   694  0796  0BF7               	decfsz	??_text+2,f
   695  0797  2F92               	goto	u187
   696  0798  2F99               	nop2
   697  0799                     l781:
   698                           
   699                           ;Lab10.c: 174:     printf(" 2. Desplegar PORTA \r ");
   700  0799  30A9               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   701  079A  120A  118A  271A  120A  118A  	fcall	_printf
   702                           
   703                           ;Lab10.c: 176:     _delay((unsigned long)((250)*(8000000/4000.0)));
   704  079F  3003               	movlw	3
   705  07A0  00F7               	movwf	??_text+2
   706  07A1  308A               	movlw	138
   707  07A2  00F6               	movwf	??_text+1
   708  07A3  3055               	movlw	85
   709  07A4  00F5               	movwf	??_text
   710  07A5                     u197:
   711  07A5  0BF5               	decfsz	??_text,f
   712  07A6  2FA5               	goto	u197
   713  07A7  0BF6               	decfsz	??_text+1,f
   714  07A8  2FA5               	goto	u197
   715  07A9  0BF7               	decfsz	??_text+2,f
   716  07AA  2FA5               	goto	u197
   717  07AB  2FAC               	nop2
   718  07AC                     l783:
   719                           
   720                           ;Lab10.c: 177:     printf(" 3. Desplegar PORTB \r");
   721  07AC  30D6               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   722  07AD  120A  118A  271A  120A  118A  	fcall	_printf
   723  07B2                     l63:	
   724                           ;Lab10.c: 179:     while(RCIF == 0);
   725                           
   726  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   727  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   728  07B4  1E8C               	btfss	12,5	;volatile
   729  07B5  2FB7               	goto	u101
   730  07B6  2FB8               	goto	u100
   731  07B7                     u101:
   732  07B7  2FB2               	goto	l63
   733  07B8                     u100:
   734  07B8                     l785:
   735                           
   736                           ;Lab10.c: 182:     if (RCREG == '1')
   737  07B8  3031               	movlw	49
   738  07B9  061A               	xorwf	26,w	;volatile
   739  07BA  1D03               	btfss	3,2
   740  07BB  2FBD               	goto	u111
   741  07BC  2FBE               	goto	u110
   742  07BD                     u111:
   743  07BD  2FD1               	goto	l791
   744  07BE                     u110:
   745  07BE                     l787:
   746                           
   747                           ;Lab10.c: 183:     {;Lab10.c: 184:         _delay((unsigned long)((500)*(8000000/4000.0)
      +                          ));
   748  07BE  3006               	movlw	6
   749  07BF  00F7               	movwf	??_text+2
   750  07C0  3013               	movlw	19
   751  07C1  00F6               	movwf	??_text+1
   752  07C2  30AD               	movlw	173
   753  07C3  00F5               	movwf	??_text
   754  07C4                     u207:
   755  07C4  0BF5               	decfsz	??_text,f
   756  07C5  2FC4               	goto	u207
   757  07C6  0BF6               	decfsz	??_text+1,f
   758  07C7  2FC4               	goto	u207
   759  07C8  0BF7               	decfsz	??_text+2,f
   760  07C9  2FC4               	goto	u207
   761  07CA  2FCB               	nop2
   762  07CB                     l789:
   763                           
   764                           ;Lab10.c: 185:         printf("\r Cadena de caracteres cargando... \r");
   765  07CB  305F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   766  07CC  120A  118A  271A  120A  118A  	fcall	_printf
   767  07D1                     l791:
   768                           
   769                           ;Lab10.c: 188:     if (RCREG == '2')
   770  07D1  3032               	movlw	50
   771  07D2  1283               	bcf	3,5	;RP0=0, select bank0
   772  07D3  1303               	bcf	3,6	;RP1=0, select bank0
   773  07D4  061A               	xorwf	26,w	;volatile
   774  07D5  1D03               	btfss	3,2
   775  07D6  2FD8               	goto	u121
   776  07D7  2FD9               	goto	u120
   777  07D8                     u121:
   778  07D8  2FE7               	goto	l797
   779  07D9                     u120:
   780  07D9                     l793:
   781                           
   782                           ;Lab10.c: 189:     {;Lab10.c: 190:         printf("\r Insertar caracter para desplegar e
      +                          n PORTA: \r");
   783  07D9  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   784  07DA  120A  118A  271A  120A  118A  	fcall	_printf
   785  07DF                     l68:	
   786                           ;Lab10.c: 191:         while (RCIF == 0);
   787                           
   788  07DF  1283               	bcf	3,5	;RP0=0, select bank0
   789  07E0  1303               	bcf	3,6	;RP1=0, select bank0
   790  07E1  1E8C               	btfss	12,5	;volatile
   791  07E2  2FE4               	goto	u131
   792  07E3  2FE5               	goto	u130
   793  07E4                     u131:
   794  07E4  2FDF               	goto	l68
   795  07E5                     u130:
   796  07E5                     l795:
   797                           
   798                           ;Lab10.c: 192:         PORTA = RCREG;
   799  07E5  081A               	movf	26,w	;volatile
   800  07E6  0085               	movwf	5	;volatile
   801  07E7                     l797:
   802                           
   803                           ;Lab10.c: 194:     if (RCREG == '3')
   804  07E7  3033               	movlw	51
   805  07E8  061A               	xorwf	26,w	;volatile
   806  07E9  1D03               	btfss	3,2
   807  07EA  2FEC               	goto	u141
   808  07EB  2FED               	goto	u140
   809  07EC                     u141:
   810  07EC  2FFB               	goto	l76
   811  07ED                     u140:
   812  07ED                     l799:
   813                           
   814                           ;Lab10.c: 195:     {;Lab10.c: 196:         printf("\r Insertar caracter para desplegar e
      +                          n PORTB: \r");
   815  07ED  3030               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   816  07EE  120A  118A  271A  120A  118A  	fcall	_printf
   817  07F3                     l72:	
   818                           ;Lab10.c: 197:         while (RCIF == 0);
   819                           
   820  07F3  1283               	bcf	3,5	;RP0=0, select bank0
   821  07F4  1303               	bcf	3,6	;RP1=0, select bank0
   822  07F5  1E8C               	btfss	12,5	;volatile
   823  07F6  2FF8               	goto	u151
   824  07F7  2FF9               	goto	u150
   825  07F8                     u151:
   826  07F8  2FF3               	goto	l72
   827  07F9                     u150:
   828  07F9                     l801:
   829                           
   830                           ;Lab10.c: 198:         PORTB = RCREG;
   831  07F9  081A               	movf	26,w	;volatile
   832  07FA  0086               	movwf	6	;volatile
   833  07FB                     l76:	
   834                           ;Lab10.c: 199:     }
   835                           
   836  07FB  0008               	return
   837  07FC                     __end_of_text:
   838                           
   839                           	psect	text2
   840  071A                     __ptext2:	
   841 ;; *************** function _printf *****************
   842 ;; Defined at:
   843 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;  f               1    wreg     PTR const unsigned char 
   846 ;;		 -> STR_7(47), STR_6(47), STR_5(37), STR_4(22), 
   847 ;;		 -> STR_3(23), STR_2(37), STR_1(22), 
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  f               1    4[COMMON] PTR const unsigned char 
   850 ;;		 -> STR_7(47), STR_6(47), STR_5(37), STR_4(22), 
   851 ;;		 -> STR_3(23), STR_2(37), STR_1(22), 
   852 ;;  tmpval          4    0        struct .
   853 ;;  cp              2    0        PTR const unsigned char 
   854 ;;  len             2    0        unsigned int 
   855 ;;  val             2    0        unsigned int 
   856 ;;  c               1    3[COMMON] unsigned char 
   857 ;;  ap              1    2[COMMON] PTR void [1]
   858 ;;		 -> ?_printf(2), 
   859 ;;  flag            1    0        unsigned char 
   860 ;;  prec            1    0        char 
   861 ;; Return value:  Size  Location     Type
   862 ;;                  2   12[None  ] int 
   863 ;; Registers used:
   864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   870 ;;      Params:         0       0       0       0       0
   871 ;;      Locals:         3       0       0       0       0
   872 ;;      Temps:          1       0       0       0       0
   873 ;;      Totals:         4       0       0       0       0
   874 ;;Total ram usage:        4 bytes
   875 ;; Hardware stack levels used:    1
   876 ;; Hardware stack levels required when called:    1
   877 ;; This function calls:
   878 ;;		_putch
   879 ;; This function is called by:
   880 ;;		_text
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           
   885                           ;psect for function _printf
   886  071A                     _printf:
   887                           
   888                           ;incstack = 0
   889                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   890                           ;printf@f stored from wreg
   891  071A  00F4               	movwf	printf@f
   892  071B                     l767:
   893                           
   894                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
   895  071B  3070               	movlw	(low (?_printf| 0))& (0+255)
   896  071C  00F1               	movwf	??_printf
   897  071D  0871               	movf	??_printf,w
   898  071E  00F2               	movwf	printf@ap
   899                           
   900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   901  071F  2F26               	goto	l771
   902  0720                     l769:
   903                           
   904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
   905  0720  0873               	movf	printf@c,w
   906  0721  120A  118A  2702  120A  118A  	fcall	_putch
   907  0726                     l771:	
   908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
   909                           
   910                           
   911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   912  0726  3001               	movlw	1
   913  0727  07F4               	addwf	printf@f,f
   914  0728  30FF               	movlw	-1
   915  0729  0774               	addwf	printf@f,w
   916  072A  0084               	movwf	4
   917  072B  120A  118A  2003  120A  118A  	fcall	stringdir
   918  0730  00F1               	movwf	??_printf
   919  0731  0871               	movf	??_printf,w
   920  0732  00F3               	movwf	printf@c
   921  0733  0873               	movf	printf@c,w
   922  0734  1D03               	btfss	3,2
   923  0735  2F37               	goto	u91
   924  0736  2F38               	goto	u90
   925  0737                     u91:
   926  0737  2F20               	goto	l769
   927  0738                     u90:
   928  0738                     l171:
   929  0738  0008               	return
   930  0739                     __end_of_printf:
   931                           
   932                           	psect	text3
   933  0702                     __ptext3:	
   934 ;; *************** function _putch *****************
   935 ;; Defined at:
   936 ;;		line 156 in file "Lab10.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;  data            1    wreg     unsigned char 
   939 ;; Auto vars:     Size  Location     Type
   940 ;;  data            1    0[COMMON] unsigned char 
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   950 ;;      Params:         0       0       0       0       0
   951 ;;      Locals:         1       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0
   953 ;;      Totals:         1       0       0       0       0
   954 ;;Total ram usage:        1 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; This function calls:
   957 ;;		Nothing
   958 ;; This function is called by:
   959 ;;		_printf
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           
   964                           ;psect for function _putch
   965  0702                     _putch:
   966                           
   967                           ;incstack = 0
   968                           ; Regs used in _putch: [wreg]
   969                           ;putch@data stored from wreg
   970  0702  00F0               	movwf	putch@data
   971  0703                     l681:
   972  0703                     l57:	
   973                           ;Lab10.c: 156: void putch(char data);Lab10.c: 157: {;Lab10.c: 158:     while(TXIF == 0);
   974                           
   975  0703  1283               	bcf	3,5	;RP0=0, select bank0
   976  0704  1303               	bcf	3,6	;RP1=0, select bank0
   977  0705  1E0C               	btfss	12,4	;volatile
   978  0706  2F08               	goto	u11
   979  0707  2F09               	goto	u10
   980  0708                     u11:
   981  0708  2F03               	goto	l57
   982  0709                     u10:
   983  0709                     l683:
   984                           
   985                           ;Lab10.c: 159:     TXREG = data;
   986  0709  0870               	movf	putch@data,w
   987  070A  0099               	movwf	25	;volatile
   988  070B                     l60:
   989  070B  0008               	return
   990  070C                     __end_of_putch:
   991                           
   992                           	psect	text4
   993  0739                     __ptext4:	
   994 ;; *************** function _setup *****************
   995 ;; Defined at:
   996 ;;		line 208 in file "Lab10.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;		None
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;		None
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, status,2
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1010 ;;      Params:         0       0       0       0       0
  1011 ;;      Locals:         0       0       0       0       0
  1012 ;;      Temps:          0       0       0       0       0
  1013 ;;      Totals:         0       0       0       0       0
  1014 ;;Total ram usage:        0 bytes
  1015 ;; Hardware stack levels used:    1
  1016 ;; This function calls:
  1017 ;;		Nothing
  1018 ;; This function is called by:
  1019 ;;		_main
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           
  1024                           ;psect for function _setup
  1025  0739                     _setup:
  1026  0739                     l693:	
  1027                           ;incstack = 0
  1028                           ; Regs used in _setup: [wreg+status,2]
  1029                           
  1030                           
  1031                           ;Lab10.c: 211:     ANSEL = 0;
  1032  0739  1683               	bsf	3,5	;RP0=1, select bank3
  1033  073A  1703               	bsf	3,6	;RP1=1, select bank3
  1034  073B  0188               	clrf	8	;volatile
  1035                           
  1036                           ;Lab10.c: 212:     ANSELH = 0;
  1037  073C  0189               	clrf	9	;volatile
  1038                           
  1039                           ;Lab10.c: 215:     TRISA = 0x0;
  1040  073D  1683               	bsf	3,5	;RP0=1, select bank1
  1041  073E  1303               	bcf	3,6	;RP1=0, select bank1
  1042  073F  0185               	clrf	5	;volatile
  1043                           
  1044                           ;Lab10.c: 216:     TRISB = 0x0;
  1045  0740  0186               	clrf	6	;volatile
  1046                           
  1047                           ;Lab10.c: 219:     PORTA = 0x00;
  1048  0741  1283               	bcf	3,5	;RP0=0, select bank0
  1049  0742  1303               	bcf	3,6	;RP1=0, select bank0
  1050  0743  0185               	clrf	5	;volatile
  1051                           
  1052                           ;Lab10.c: 220:     PORTB = 0x00;
  1053  0744  0186               	clrf	6	;volatile
  1054  0745                     l695:
  1055                           
  1056                           ;Lab10.c: 223:     OSCCONbits.IRCF2 = 1;
  1057  0745  1683               	bsf	3,5	;RP0=1, select bank1
  1058  0746  1303               	bcf	3,6	;RP1=0, select bank1
  1059  0747  170F               	bsf	15,6	;volatile
  1060  0748                     l697:
  1061                           
  1062                           ;Lab10.c: 224:     OSCCONbits.IRCF1 = 1;
  1063  0748  168F               	bsf	15,5	;volatile
  1064  0749                     l699:
  1065                           
  1066                           ;Lab10.c: 225:     OSCCONbits.IRCF0 = 1;
  1067  0749  160F               	bsf	15,4	;volatile
  1068  074A                     l701:
  1069                           
  1070                           ;Lab10.c: 226:     OSCCONbits.SCS = 1;
  1071  074A  140F               	bsf	15,0	;volatile
  1072  074B                     l703:
  1073                           
  1074                           ;Lab10.c: 229:     INTCONbits.GIE = 1;
  1075  074B  178B               	bsf	11,7	;volatile
  1076  074C                     l705:
  1077                           
  1078                           ;Lab10.c: 230:     INTCONbits.PEIE = 1;
  1079  074C  170B               	bsf	11,6	;volatile
  1080  074D                     l707:
  1081                           
  1082                           ;Lab10.c: 231:     PIE1bits.RCIE = 1;
  1083  074D  168C               	bsf	12,5	;volatile
  1084  074E                     l709:
  1085                           
  1086                           ;Lab10.c: 232:     PIE1bits.TXIE = 1;
  1087  074E  160C               	bsf	12,4	;volatile
  1088  074F                     l711:
  1089                           
  1090                           ;Lab10.c: 234:     TXSTAbits.SYNC = 0;
  1091  074F  1218               	bcf	24,4	;volatile
  1092  0750                     l713:
  1093                           
  1094                           ;Lab10.c: 235:     TXSTAbits.BRGH = 1;
  1095  0750  1518               	bsf	24,2	;volatile
  1096  0751                     l715:
  1097                           
  1098                           ;Lab10.c: 236:     BAUDCTLbits.BRG16 = 1;
  1099  0751  1683               	bsf	3,5	;RP0=1, select bank3
  1100  0752  1703               	bsf	3,6	;RP1=1, select bank3
  1101  0753  1587               	bsf	7,3	;volatile
  1102  0754                     l717:
  1103                           
  1104                           ;Lab10.c: 238:     SPBRG = 208;
  1105  0754  30D0               	movlw	208
  1106  0755  1683               	bsf	3,5	;RP0=1, select bank1
  1107  0756  1303               	bcf	3,6	;RP1=0, select bank1
  1108  0757  0099               	movwf	25	;volatile
  1109  0758                     l719:
  1110                           
  1111                           ;Lab10.c: 239:     SPBRGH = 0;
  1112  0758  019A               	clrf	26	;volatile
  1113  0759                     l721:
  1114                           
  1115                           ;Lab10.c: 241:     RCSTAbits.SPEN = 1;
  1116  0759  1283               	bcf	3,5	;RP0=0, select bank0
  1117  075A  1303               	bcf	3,6	;RP1=0, select bank0
  1118  075B  1798               	bsf	24,7	;volatile
  1119  075C                     l723:
  1120                           
  1121                           ;Lab10.c: 242:     RCSTAbits.RX9 = 0;
  1122  075C  1318               	bcf	24,6	;volatile
  1123  075D                     l725:
  1124                           
  1125                           ;Lab10.c: 243:     RCSTAbits.CREN = 1;
  1126  075D  1618               	bsf	24,4	;volatile
  1127  075E                     l727:
  1128                           
  1129                           ;Lab10.c: 245:     TXSTAbits.TXEN = 1;
  1130  075E  1683               	bsf	3,5	;RP0=1, select bank1
  1131  075F  1303               	bcf	3,6	;RP1=0, select bank1
  1132  0760  1698               	bsf	24,5	;volatile
  1133  0761                     l729:
  1134                           
  1135                           ;Lab10.c: 247:     PIR1bits.RCIF = 0;
  1136  0761  1283               	bcf	3,5	;RP0=0, select bank0
  1137  0762  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0763  128C               	bcf	12,5	;volatile
  1139  0764                     l731:
  1140                           
  1141                           ;Lab10.c: 248:     PIR1bits.TXIF = 0;
  1142  0764  120C               	bcf	12,4	;volatile
  1143  0765                     l79:
  1144  0765  0008               	return
  1145  0766                     __end_of_setup:
  1146  007E                     btemp	set	126	;btemp
  1147  007E                     wtemp0	set	126
  1148                           
  1149                           	psect	config
  1150                           
  1151                           ;Config register CONFIG1 @ 0x2007
  1152                           ;	Oscillator Selection bits
  1153                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1154                           ;	Watchdog Timer Enable bit
  1155                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1156                           ;	Power-up Timer Enable bit
  1157                           ;	PWRTE = OFF, PWRT disabled
  1158                           ;	RE3/MCLR pin function select bit
  1159                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1160                           ;	Code Protection bit
  1161                           ;	CP = OFF, Program memory code protection is disabled
  1162                           ;	Data Code Protection bit
  1163                           ;	CPD = OFF, Data memory code protection is disabled
  1164                           ;	Brown Out Reset Selection bits
  1165                           ;	BOREN = OFF, BOR disabled
  1166                           ;	Internal External Switchover bit
  1167                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1168                           ;	Fail-Safe Clock Monitor Enabled bit
  1169                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1170                           ;	Low Voltage Programming Enable bit
  1171                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1172                           ;	In-Circuit Debugger Mode bit
  1173                           ;	DEBUG = 0x1, unprogrammed default
  1174  2007                     	org	8199
  1175  2007  20D4               	dw	8404
  1176                           
  1177                           ;Config register CONFIG2 @ 0x2008
  1178                           ;	Brown-out Reset Selection bit
  1179                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1180                           ;	Flash Program Memory Self Write Enable bits
  1181                           ;	WRT = OFF, Write protection off
  1182  2008                     	org	8200
  1183  2008  3FFF               	dw	16383

Data Sizes:
    Strings     235
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 47
		 -> STR_7(CODE[47]), STR_6(CODE[47]), STR_5(CODE[37]), STR_4(CODE[22]), 
		 -> STR_3(CODE[23]), STR_2(CODE[37]), STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_text
    _text->_printf
    _printf->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     292
                              _setup
                               _text
 ---------------------------------------------------------------------------------
 (1) _text                                                 3     3      0     292
                                              5 COMMON     3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              16    16      0     292
                                              1 COMMON     4     4      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _text
     _printf
       _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun May 09 23:30:28 2021

                      pc 0002                       l60 070B                       l63 07B2  
                     l72 07F3                       l57 0703                       l76 07FB  
                     l68 07DF                       l79 0765                       u10 0709  
                     u11 0708                       u90 0738                       u91 0737  
                     fsr 0004                      l171 0738                      l701 074A  
                    l711 074F                      l703 074B                      l721 0759  
                    l713 0750                      l705 074C                      l801 07F9  
                    l731 0764                      l723 075C                      l715 0751  
                    l707 074D                      l803 070C                      l725 075D  
                    l717 0754                      l709 074E                      l805 0711  
                    l727 075E                      l719 0758                      l729 0761  
                    l681 0703                      l683 0709                      l771 0726  
                    l693 0739                      l781 0799                      l773 0766  
                    l695 0745                      l767 071B                      l791 07D1  
                    l783 07AC                      l775 0773                      l697 0748  
                    l769 0720                      l793 07D9                      l785 07B8  
                    l777 0779                      l699 0749                      l795 07E5  
                    l787 07BE                      l779 078C                      l797 07E7  
                    l789 07CB                      l799 07ED                      u100 07B8  
                    u101 07B7                      u110 07BE                      u111 07BD  
                    u120 07D9                      u121 07D8                      u130 07E5  
                    u131 07E4                      u140 07ED                      u141 07EC  
                    u150 07F9                      u151 07F8                      u207 07C4  
                    u167 076C                      u177 077F                      u187 0792  
                    u197 07A5                      fsr0 0004                     STR_1 00C8  
                   STR_2 008C                     STR_3 00B1                     STR_4 00DE  
                   STR_5 0067                     STR_6 0009                     STR_7 0038  
                   _RCIF 0065                     _TXIF 0064                     _main 070C  
                   _text 0766                     btemp 007E                     start 0000  
                  ?_main 0070                    ?_text 0070                    _ANSEL 0188  
                  _RCREG 001A                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  _TXREG 0019                    _setup 0739                    _putch 0702  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 071A             __end_of_text 07FC  
                 ??_main 0078                   ??_text 0075                   ?_setup 0070  
                 ?_putch 0070                   _ANSELH 0189                   _SPBRGH 009A  
                 _printf 071A  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_setup 0766            __end_of_putch 070C                  ??_setup 0070  
                ??_putch 0070               __pmaintext 070C                  ?_printf 0070  
             __stringtab 0003                  __ptext1 0766                  __ptext2 071A  
                __ptext3 0702                  __ptext4 0739          __size_of_printf 001F  
   end_of_initialization 07FC                _RCSTAbits 0018                  printf@c 0073  
                printf@f 0074                _TXSTAbits 0098              _BAUDCTLbits 0187  
         __end_of_printf 0739      start_initialization 07FC                 ??_printf 0071  
              ___latbits 0002                __pstrings 0003           __size_of_setup 002D  
         __size_of_putch 000A                 _PIE1bits 008C                 _PIR1bits 000C  
            __stringbase 0008       __end_of__stringtab 0009            __size_of_main 000E  
          __size_of_text 0096                putch@data 0070               _INTCONbits 000B  
              stringcode 0003               _OSCCONbits 008F                 printf@ap 0072  
               stringdir 0003                 stringtab 0003  
